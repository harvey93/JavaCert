package ch8;
import java.util.*;

public class Queens {
	
	private static int GRID_SIZE = 8;
	
	public static ArrayList<Integer []> eightQueens(){
		ArrayList<Integer []> result = new ArrayList<>();
		Integer[] cols = new Integer[GRID_SIZE];
		eightQueens(GRID_SIZE - 1, cols, result);
		return result;
	}
	
	private static void eightQueens(int row, Integer[] cols, ArrayList<Integer[]> result){
		if(row == GRID_SIZE){
			result.add(cols.clone());
		}else {
			for(int col = 0; col < GRID_SIZE; col++){
				if(checkValid2(cols, row, col)){
					cols[row] = col;
					eightQueens(row + 1, cols, result);
				}
			}
		}
	}
	
	static boolean checkValid2(Integer[] columns, int row1, int column1) {
		for (int row2 = 0; row2 < row1; row2++) {
		int column2 = columns[row2];
		if (column1 == column2) {
		return false;
		}
		int columnDistance = Math.abs(column2 - column1);
		
		
		int rowDistance = row1 - row2;
		if (columnDistance == rowDistance) {
		return false;
		}
		}
		return true;
		}
		
	
	
	private static boolean checkValid(Integer [] cols, int row1, int col){
		boolean res = true;
		for(int row2 = 0; row2 < row1; row2++){
			int col2 = cols[row2];
			
			if(col == col2){
//				res = false;
//				break;
				return false;
			}
			
			int colDistance = Math.abs(col2 - col);
			
			int rowDistance = row1 - row2;
			
			if(colDistance == rowDistance){
//				res = false;
//				break;
				return false;
			}
			
			
		}
//		return res;
		return true;
	}
}
