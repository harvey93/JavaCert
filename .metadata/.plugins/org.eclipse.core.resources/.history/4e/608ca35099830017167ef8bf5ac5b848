package ch4;
import java.util.*;

public class Graph<T> {
	private HashMap<String, GNode<T>> nodeMap = new HashMap<>();
	
	public T getNodeData(String label){
		return nodeMap.get(label).data;
	}
	
	public HashSet<Edge> getNodeInEdges(String label){
		return nodeMap.get(label).inEdges;
	}
	
	public HashSet<Edge> getNodeOutEdges(String label){
		return nodeMap.get(label).outEdges;
	}
	
	public void addEdge(String label1, String label2, int weight){
		GNode<T> node1 = nodeMap.get(label1);
		GNode<T> node2 = nodeMap.get(label2);
		Edge inEdge = new Edge(label1, weight);
		Edge outEdge = new Edge(label2, weight);
		node1.outEdges.add(outEdge);
		node2.inEdges.add(inEdge);
	}
	
	public void addNode(String label, T data){
		GNode<T> node = new GNode<>(data);
		nodeMap.put(label, node);
	}
	
	
	
	public String toString(){
		return nodeMap.toString();
	}

}

public class GNode<T>{
	T data;
	HashSet<Edge> inEdges = new HashSet<>();
	HashSet<Edge> outEdges = new HashSet<>();
	
	public GNode( T data){
		this.data = data;
	}
	
	public String toString(){
		return data == null ? "null" : data.toString();
	}
}


class Edge{
	String destLabel;
	int weight;
	
	public Edge(String destLabel, int weight){
		this.destLabel = destLabel;
		this.weight = weight;
	}
	
	public String toString(){
		return "Connection: " + this.destLabel + " Weight: " + this.weight;
	}
}

